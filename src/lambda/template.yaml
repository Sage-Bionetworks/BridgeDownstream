AWSTemplateFormatVersion: '2010-09-09'

Transform: AWS::Serverless-2016-10-31

Description:  >
  python3.8

  SAM Template for sns-to-glue

Parameters:

  WorkflowName:
    Type: String
    Description: Name of the glue workflow to start when new data arrives

  Namespace:
    Type: String
    Description: Namespace of the stack so that it may be unique

Resources:

  SnsToGlueRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: StartGlueWorkflow
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - glue:StartWorkflowRun
            - glue:PutWorkflowRunProperties
            Resource:
            - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:workflow/${WorkflowName}

  SnsToGlueFunction:
    Type: AWS::Serverless::Function
    Properties:
      #PackageType: Image
      Role: !GetAtt SnsToGlueRole.Arn
      Events:
        SnsToGlue:
          Type: SNS
          Properties:
            Topic: !Ref SnsTopic
      Timeout: 600
      Environment:
        Variables:
          NAMESPACE: !Ref Namespace
    # Metadata:
    #   Dockerfile: Dockerfile
    #   DockerContext: ./sns_to_glue
    #   DockerTag: v0.1

  SnsTopic:
    Type: AWS::SNS::Topic

  SnsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn: !Ref SnsTopic
      Endpoint: !GetAtt SnsToGlueFunction.Arn

  LambdaInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt SnsToGlueFunction.Arn
      Action: lambda:InvokeFunction
      SourceArn: !Ref SnsTopic
      Principal: sns.amazonaws.com
