name: upload-and-deploy

on: [push, pull_request]

env:
  REPO_NAME: ${{ github.event.repository.name }}
  LAMBDA_BUCKET: sceptre-lambda-bucket-bucket-iw8km58inb0i
  CFN_BUCKET: sceptre-cloudformation-bucket-bucket-65ci2qog5w6l
  ECR_REPOSITORY: 634761300905.dkr.ecr.us-east-1.amazonaws.com/sns_to_glue

jobs:

  pre-commit:

    name: Run pre-commit hooks against all files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3

  upload-files:

    name: Upload files to S3 bucket
    runs-on: ubuntu-latest
    needs: pre-commit
    if: startsWith(github.ref, 'refs/pull') != true
    environment: develop
    steps:

      - name: Setup code, pipenv, aws
        uses: Sage-Bionetworks/action-pipenv-aws-setup@v2
        with:
          aws_access_key_id: ${{ secrets.CI_USER_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.CI_USER_SECRET_ACCESS_KEY }}
          role_to_assume: ${{ secrets.CI_ROLE_TO_ASSUME }}

      - name: Setup sam
        uses: aws-actions/setup-sam@v1
        with:
          version: 1.37.0

      - name: Copy files to templates bucket
        run: python src/scripts/upload_artifacts/upload_artifacts.py --namespace $GITHUB_REF_NAME

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Sam build and package
        run: |
          sam build -s src/lambda/ -t src/lambda/template.yaml

          sam package --template-file .aws-sam/build/template.yaml \
            --s3-bucket $LAMBDA_BUCKET \
            --output-template-file .aws-sam/build/template.yaml \
            --image-repository $ECR_REPOSITORY \
            --no-progressbar

          aws s3 cp .aws-sam/build/template.yaml \
            s3://$CFN_BUCKET/$REPO_NAME/$GITHUB_REF_NAME/templates/lambda/sns_to_glue/



  sceptre-deploy-common:

    name: Deploy common CloudFormation templates using sceptre
    runs-on: ubuntu-latest
    needs: [pre-commit, upload-files]
    if: github.ref == 'refs/heads/main'

    strategy:
      matrix:
        job-environment:
          - develop
          - prod
        include:
          - job-environment: develop
            sceptre-environment: develop
            sceptre-namespace: bridge-downstream-dev
          - job-environment: prod
            sceptre-environment: prod
            sceptre-namespace: bridge-downstream-prod
    environment: ${{ matrix.job-environment }}
    steps:

      - name: Setup code, pipenv, aws
        uses: Sage-Bionetworks/action-pipenv-aws-setup@v2
        with:
          aws_access_key_id: ${{ secrets.CI_USER_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.CI_USER_SECRET_ACCESS_KEY }}
          role_to_assume: ${{ secrets.CI_ROLE_TO_ASSUME }}

      - name: Create directory for remote sceptre templates
        run: mkdir -p templates/remote/

      - name: Deploy sceptre stacks
        run: pipenv run sceptre launch ${{ matrix.sceptre-environment }}/common --var namespace=${{ matrix.sceptre-namespace }} --yes

  sceptre-deploy-namespaced:
    name: Deploy namespaced stacks
    runs-on: ubuntu-latest
    needs: [pre-commit, upload-files]
    if: github.ref != 'refs/heads/main'

    steps:

      - name: Setup code, pipenv, aws
        uses: Sage-Bionetworks/action-pipenv-aws-setup@v2
        with:
          aws_access_key_id: ${{ secrets.CI_USER_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.CI_USER_SECRET_ACCESS_KEY }}
          role_to_assume: ${{ secrets.CI_ROLE_TO_ASSUME }}

      - name: Create directory for remote sceptre templates
        run: mkdir -p templates/remote/

      - name: Deploy sceptre stacks
        run: pipenv run sceptre launch ${{ matrix.sceptre-environment }}/namespaced --var namespace=${{ matrix.sceptre-namespace }} --yes
