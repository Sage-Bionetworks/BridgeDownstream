name: upload-and-deploy

on: [push]

env:
  REPO_NAME: ${{ github.event.repository.name }}
  LAMBDA_BUCKET: sceptre-lambda-bucket-bucket-iw8km58inb0i
  CFN_BUCKET: sceptre-cloudformation-bucket-bucket-65ci2qog5w6l
  ECR_REPOSITORY: 634761300905.dkr.ecr.us-east-1.amazonaws.com/sns_to_glue
  NAMESPACE: bridge-downstream

jobs:

  pre-commit:

    name: Run pre-commit hooks against all files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3

  upload-files:

    name: Upload files to S3 bucket
    runs-on: ubuntu-latest
    needs: pre-commit
    environment: develop
    steps:

      - name: Setup code, pipenv, aws
        uses: Sage-Bionetworks/action-pipenv-aws-setup@v1
        with:
          aws_access_key_id: ${{ secrets.CI_USER_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.CI_USER_SECRET_ACCESS_KEY }}
          role_to_assume: ${{ secrets.CI_ROLE_TO_ASSUME }}

      - name: Setup sam
        uses: aws-actions/setup-sam@v1
        with:
          version: 1.37.0

      - name: Set namespace for non-default branch or for tag
        if: github.ref_name != 'main'
        run: echo "NAMESPACE=$GITHUB_REF_NAME" >> $GITHUB_ENV

      - name: Copy files to templates bucket
        run: python src/scripts/manage_artifacts/artifacts.py --upload --ref $GITHUB_REF_NAME

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Sam build and package
        run: |
          sam build -s src/lambda/ -t src/lambda/template.yaml

          sam package --template-file .aws-sam/build/template.yaml \
            --s3-bucket $LAMBDA_BUCKET \
            --output-template-file .aws-sam/build/template.yaml \
            --image-repository $ECR_REPOSITORY \
            --no-progressbar

          aws s3 cp .aws-sam/build/template.yaml \
            s3://$CFN_BUCKET/$REPO_NAME/$GITHUB_REF_NAME/templates/lambda/sns_to_glue/

  sceptre-deploy-branch:
    name: Deploy branch using sceptre
    runs-on: ubuntu-latest
    needs: [pre-commit, upload-files]
    env:
      NAMESPACE: $GITHUB_REF_NAME
    if: github.ref_name != 'main' && github.ref_type != 'tag'
    environment: develop

    steps:
      - name: Setup code, pipenv, aws
        uses: Sage-Bionetworks/action-pipenv-aws-setup@v1
        with:
          aws_access_key_id: ${{ secrets.CI_USER_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.CI_USER_SECRET_ACCESS_KEY }}
          role_to_assume: ${{ secrets.CI_ROLE_TO_ASSUME }}

      - name: Create directory for remote sceptre templates
        run: mkdir -p templates/remote/

      - name: Deploy sceptre stacks
        run: pipenv run sceptre --var "namespace=${{ env.NAMESPACE }}" launch develop --yes

  integration-test:
    name: Test the pipeline
    runs-on: ubuntu-latest
    needs: [pre-commit, upload-files, sceptre-deploy-branch]
    env:
      NAMESPACE: $GITHUB_REF_NAME
      LAMBDA_ENV_VARS_FILE: namespace_vars.json
    if: github.ref_name != 'main' && github.ref_type != 'tag'
    environment: develop
    steps:

      - name: Setup code, pipenv, aws
        uses: Sage-Bionetworks/action-pipenv-aws-setup@v1
        with:
          aws_access_key_id: ${{ secrets.CI_USER_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.CI_USER_SECRET_ACCESS_KEY }}
          role_to_assume: ${{ secrets.CI_ROLE_TO_ASSUME }}

      - name: Setup sam
        uses: aws-actions/setup-sam@v1
        with:
          version: 1.37.0

      - name: Create env vars file for lambda
        run: |
          cat > "$LAMBDA_ENV_VARS_FILE" << EOM
          {
            "SnsToGlueFunction": {
              "SSM_PARAMETER_NAME": "synapse-bridgedownstream-auth",
              "GLUE_WORKFLOW_NAME": "${{ env.NAMESPACE }}-example-app-1-study-1-S3ToJsonWorkflow",
              "NAMESPACE": "${{ env.NAMESPACE }}"
            }
          }
          EOM
          chmod +x "$LAMBDA_ENV_VARS_FILE"

      - name: Test whether env vars were written to file
        run: cat "$LAMBDA_ENV_VARS_FILE"

      - name: Trigger lambda
        run: |
          if [ -f "$LAMBDA_ENV_VARS_FILE" ]; then
            sam build -s src/lambda/ -t src/lambda/template.yaml
            sam local invoke -e src/lambda/events/single-record.json \
              --env-vars "$LAMBDA_ENV_VARS_FILE" \
              -t src/lambda/template.yaml
          else
            echo "$LAMBDA_ENV_VARS_FILE is missing."
          fi

  sceptre-deploy-main:
    name: Deploy trunk using sceptre
    runs-on: ubuntu-latest
    needs: [pre-commit, upload-files]
    if: github.ref_name == 'main' && github.ref_type != 'tag'

    strategy:
      matrix:
        job-environment:
          - develop
          - prod

        include:
          - job-environment: develop
            sceptre-environment: develop

          - job-environment: prod
            sceptre-environment: prod

    environment: ${{ matrix.job-environment }}

    steps:
      - name: Setup code, pipenv, aws
        uses: Sage-Bionetworks/action-pipenv-aws-setup@v1
        with:
          aws_access_key_id: ${{ secrets.CI_USER_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.CI_USER_SECRET_ACCESS_KEY }}
          role_to_assume: ${{ secrets.CI_ROLE_TO_ASSUME }}

      - name: Create directory for remote sceptre templates
        run: mkdir -p templates/remote/

      - name: Deploy sceptre stacks
        run: pipenv run sceptre --var "namespace=${{ env.NAMESPACE }}" launch ${{ matrix.sceptre-environment }} --yes
